# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'PiUi.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets, uic
from PyQt5.QtCore import pyqtSlot
from PyQt5.QtWidgets import QMainWindow
import DiceReader as DR
from Config import *


class Ui_Logic(QMainWindow):
    CamRadioButtons = []
    def __init__(self):
        super(Ui_Logic, self).__init__()
        uic.loadUi('PiUi.ui', self)
        self.show()
        self.SaveButton.clicked.connect(SaveConfig)
        self.SettingsButton.clicked.connect(self.RunConfig)

    def GenerateCameras(self):
        i = DR.returnCameraIndexes()
        print(i)
        for j in i:
            self.AddCamera(str(j))
        self.AddCamera("Remote_Camera")

    def AddCamera(self,name):
        self.newRadioButton = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        self.newRadioButton.setObjectName(name)
        self.verticalLayout_2.addWidget(self.newRadioButton)
        _translate = QtCore.QCoreApplication.translate
        self.newRadioButton.setText(_translate("MainWindow", name))
        self.CamRadioButtons.append(self.newRadioButton)

    def GetSliderValues(self):
        print(self.MusicSlider.value())
        return self.MusicSlider.value(), self.EffectSlider.value()

    def LoadConfig(self,config):
        self.MusicSlider.setValue(int(config.Music))
        self.EffectSlider.setValue(int(config.Effects))
        for i in Ui_Logic.CamRadioButtons:
            if i.text() == config.Camera:
                i.setChecked(True)
        self.RemoteCameraAddress.setPlainText(config.RemoteCamera)
        self.ConfirmRollsCheckBox.setCheckState(int(config.ConfirmRoll))

    def GetCameraAddress(self):
        return self.RemoteCameraAddress.toPlainText()

    def RunConfig(self):
        self.ChangeIndex(5)
    def ChangeIndex(self,index):
        self.stackedWidget.setCurrentIndex(int(index))